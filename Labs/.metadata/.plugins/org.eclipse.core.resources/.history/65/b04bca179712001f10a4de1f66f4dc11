package ch.hevs.businessobject;

import java.util.ArrayList;
import java.util.List;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;



@Entity
public class Player {

	@Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int playerId;
	@NotNull @Size(min = 1, max = 50)private String firstname;     
	@NotNull @Size(min = 1, max = 50)private String lastname;
	private int age;

	// relations
	@OneToMany(mappedBy = "player")
	private List<Account> accounts = new ArrayList<>();
	
	@ManyToOne
    @JoinColumn(name = "positionId")
    private Position position;

    @ManyToOne
    @JoinColumn(name = "clubId")
    private Club club;
	
	// id
	public long getPlayerId() {
		return playerId;
	}
	public void setPlayerId(int id) {
		this.playerId = id;
	}

	// firstname
	public String getFirstname() {
		return firstname;
	}
	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}
	
	// lastname
	public String getLastname() {
		return lastname;
	}
	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	// age
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	
	// accounts (From Account)
	public List<Account> getAccounts() {
		return accounts;
	}
	public void setAccounts(List<Account> accounts) {
		this.accounts = accounts;
	}
	
	// helper methods
	public void addAccount(Account a) {
		accounts.add(a);
		a.setOwner(this);
	}

	// constructors
	public Player() {
	}
	public Player(String firstname, String lastname, int age) {
		this.lastname = lastname;
		this.firstname = firstname;
		this.age = age;
	}

	@Override
	public String toString() {
		String result = playerId + "-" + lastname + "-" + firstname;
		return result;
	}
}
